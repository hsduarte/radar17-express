version: '3.8'

services:
  # Node.js application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: radar17-app
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=production # Changed from development for deployment
      - PORT=5001
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/radar17-debate?schema=public
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - radar17-network
    volumes:
      - ./:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL service
  postgres:
    image: postgres:14
    container_name: radar17-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=radar17-debate
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - radar17-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # pgAdmin service (conditionally included)
  pgadmin:
    image: dpage/pgadmin4
    container_name: radar17-pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    depends_on:
      - postgres
    networks:
      - radar17-network
    profiles:
      - dev
      - tools

networks:
  radar17-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local